/*
给定一个二叉树，返回其节点值自底向上的层次遍历。 （即按从叶子节点所在层到根节点所在的层，逐层从左向右遍历）

例如：
给定二叉树 [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回其自底向上的层次遍历为：

[
  [15,7],
  [9,20],
  [3]
]
*/
class Solution {
    public List<List<Integer>> list=new ArrayList<>();
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        bfs(root,0);
        Collections.reverse(list);
        return list;
    }
    public void bfs(TreeNode root,int step){
        if(root==null) return;
        if(list.size()<=step) list.add(new ArrayList<>());
        bfs(root.left,step+1);
        bfs(root.right,step+1);
        list.get(step).add(root.val);
    }
}
