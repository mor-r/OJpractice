import java.util.*;
class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}
public class Plus {
    /*
    链式A+B
    有两个用链表表示的整数，每个结点包含一个数位。
    这些数位是反向存放的，也就是个位排在链表的首部。
    编写函数对这两个整数求和，并用链表形式返回结果。

    给定两个链表ListNode* A，ListNode* B，请返回A+B的结果(ListNode*)。

    测试样例：
    {1,2,3},{3,2,1}
    返回：{4,4,4}
    */
    public ListNode plusAB(ListNode a, ListNode b) {
        ListNode result=new ListNode(-1);
        ListNode newHead=result;
        int c=0,val1,val2,sum;
        while(a!=null||b!=null|c!=0){
            val1=(a==null?0:a.val);
            val2=(b==null?0:b.val);
            sum=val1+val2+c;
            c=sum/10;
            ListNode node=new ListNode(sum%10);
            result.next=node;
            result=result.next;
            a=(a==null?null:a.next);
            b=(b==null?null:b.next);
        }
        return newHead.next;
    }
}
